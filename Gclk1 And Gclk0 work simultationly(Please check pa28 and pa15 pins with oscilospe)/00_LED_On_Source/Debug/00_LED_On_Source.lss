
00_LED_On_Source.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000048c  00000000  00000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     0000042c  20000000  0000048c  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000040  2000042c  000008b8  0002042c  2**2
                  ALLOC
  3 .stack        00002004  2000046c  000008f8  0002042c  2**0
                  ALLOC
  4 .ARM.attributes 00000028  00000000  00000000  0002042c  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  00020454  2**0
                  CONTENTS, READONLY
  6 .debug_info   000055f4  00000000  00000000  000204ad  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000004b5  00000000  00000000  00025aa1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000000a0  00000000  00000000  00025f56  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000090  00000000  00000000  00025ff6  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000050  00000000  00000000  00026086  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  00011d66  00000000  00000000  000260d6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00001be2  00000000  00000000  00037e3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00071b5a  00000000  00000000  00039a1e  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  0000028c  00000000  00000000  000ab578  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
   0:	70 24 00 20 cd 01 00 00 c9 01 00 00 c9 01 00 00     p$. ............
	...
  2c:	c9 01 00 00 00 00 00 00 00 00 00 00 c9 01 00 00     ................
  3c:	c9 01 00 00 c9 01 00 00 c9 01 00 00 c9 01 00 00     ................
  4c:	c9 01 00 00 c9 01 00 00 c9 01 00 00 c9 01 00 00     ................
  5c:	c9 01 00 00 c9 01 00 00 c9 01 00 00 c9 01 00 00     ................
  6c:	c9 01 00 00 c9 01 00 00 c9 01 00 00 c9 01 00 00     ................
  7c:	c9 01 00 00 c9 01 00 00 c9 01 00 00 c9 01 00 00     ................
  8c:	c9 01 00 00 c9 01 00 00 c9 01 00 00 c9 01 00 00     ................
  9c:	c9 01 00 00 c9 01 00 00 c9 01 00 00 c9 01 00 00     ................
  ac:	c9 01 00 00 00 00 00 00                             ........

000000b4 <__do_global_dtors_aux>:
  b4:	b510      	push	{r4, lr}
  b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
  b8:	7823      	ldrb	r3, [r4, #0]
  ba:	2b00      	cmp	r3, #0
  bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
  be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
  c0:	2b00      	cmp	r3, #0
  c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
  c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
  c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
  c8:	bf00      	nop
  ca:	2301      	movs	r3, #1
  cc:	7023      	strb	r3, [r4, #0]
  ce:	bd10      	pop	{r4, pc}
  d0:	2000042c 	.word	0x2000042c
  d4:	00000000 	.word	0x00000000
  d8:	0000048c 	.word	0x0000048c

000000dc <frame_dummy>:
  dc:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
  de:	b510      	push	{r4, lr}
  e0:	2b00      	cmp	r3, #0
  e2:	d003      	beq.n	ec <frame_dummy+0x10>
  e4:	4907      	ldr	r1, [pc, #28]	; (104 <frame_dummy+0x28>)
  e6:	4808      	ldr	r0, [pc, #32]	; (108 <frame_dummy+0x2c>)
  e8:	e000      	b.n	ec <frame_dummy+0x10>
  ea:	bf00      	nop
  ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
  ee:	6803      	ldr	r3, [r0, #0]
  f0:	2b00      	cmp	r3, #0
  f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
  f4:	bd10      	pop	{r4, pc}
  f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
  f8:	2b00      	cmp	r3, #0
  fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
  fc:	4798      	blx	r3
  fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
 100:	00000000 	.word	0x00000000
 104:	20000430 	.word	0x20000430
 108:	0000048c 	.word	0x0000048c
 10c:	0000048c 	.word	0x0000048c
 110:	00000000 	.word	0x00000000

00000114 <AppInit>:
//////////////////////////////////////////////////////////////////////////
#include "app.h"
#include "clock.h"

void AppInit(void)
{
 114:	b510      	push	{r4, lr}
	ClocksInit();
 116:	4b01      	ldr	r3, [pc, #4]	; (11c <AppInit+0x8>)
 118:	4798      	blx	r3
	//REG_PORT_OUTCLR0 = LED0_PIN_MASK;
	//PORT->Group[LED0_PORT].PINCFG[LED0_PIN_NUMBER].bit.DRVSTR = 1;

	

} // AppInit()
 11a:	bd10      	pop	{r4, pc}
 11c:	00000125 	.word	0x00000125

00000120 <AppRun>:

void AppRun(void)
{
 120:	e7fe      	b.n	120 <AppRun>
	...

00000124 <ClocksInit>:
// Include and defines
//////////////////////////////////////////////////////////////////////////
#include "clock.h"

void ClocksInit(void)
{
 124:	b530      	push	{r4, r5, lr}
	PORT->Group[0].PINCFG[28].bit.PMUXEN = 1;
 126:	4b21      	ldr	r3, [pc, #132]	; (1ac <ClocksInit+0x88>)
 128:	215c      	movs	r1, #92	; 0x5c
 12a:	5c5a      	ldrb	r2, [r3, r1]
 12c:	2001      	movs	r0, #1
 12e:	4302      	orrs	r2, r0
 130:	545a      	strb	r2, [r3, r1]
	PORT->Group[0].PMUX[14].bit.PMUXE = 0x7;	
 132:	223e      	movs	r2, #62	; 0x3e
 134:	5c99      	ldrb	r1, [r3, r2]
 136:	250f      	movs	r5, #15
 138:	43a9      	bics	r1, r5
 13a:	2407      	movs	r4, #7
 13c:	4321      	orrs	r1, r4
 13e:	5499      	strb	r1, [r3, r2]
	PORT->Group[0].PINCFG[16].bit.PMUXEN = 1;
 140:	3212      	adds	r2, #18
 142:	5c99      	ldrb	r1, [r3, r2]
 144:	4301      	orrs	r1, r0
 146:	5499      	strb	r1, [r3, r2]
	PORT->Group[0].PMUX[8].bit.PMUXE = 0x7;	
 148:	2138      	movs	r1, #56	; 0x38
 14a:	5c5a      	ldrb	r2, [r3, r1]
 14c:	43aa      	bics	r2, r5
 14e:	4322      	orrs	r2, r4
 150:	545a      	strb	r2, [r3, r1]
	PORT->Group[0].PINCFG[15].bit.PMUXEN = 1;
 152:	3117      	adds	r1, #23
 154:	5c5a      	ldrb	r2, [r3, r1]
 156:	4302      	orrs	r2, r0
 158:	545a      	strb	r2, [r3, r1]
	PORT->Group[0].PMUX[7].bit.PMUXO = 0x7;
 15a:	3918      	subs	r1, #24
 15c:	5c58      	ldrb	r0, [r3, r1]
 15e:	220f      	movs	r2, #15
 160:	4002      	ands	r2, r0
 162:	2070      	movs	r0, #112	; 0x70
 164:	4302      	orrs	r2, r0
 166:	545a      	strb	r2, [r3, r1]
		
	SYSCTRL->XOSC32K.bit.XTALEN = 1;
 168:	4b11      	ldr	r3, [pc, #68]	; (1b0 <ClocksInit+0x8c>)
 16a:	8a9a      	ldrh	r2, [r3, #20]
 16c:	2104      	movs	r1, #4
 16e:	430a      	orrs	r2, r1
 170:	829a      	strh	r2, [r3, #20]
	SYSCTRL->XOSC32K.bit.EN32K = 1;
 172:	8a9a      	ldrh	r2, [r3, #20]
 174:	2108      	movs	r1, #8
 176:	430a      	orrs	r2, r1
 178:	829a      	strh	r2, [r3, #20]
	SYSCTRL->XOSC32K.bit.ENABLE = 1;
 17a:	8a9a      	ldrh	r2, [r3, #20]
 17c:	2102      	movs	r1, #2
 17e:	430a      	orrs	r2, r1
 180:	829a      	strh	r2, [r3, #20]
	
	GCLK->GENDIV.reg = GCLK_GENDIV_ID(1) | GCLK_GENDIV_DIV(1);
 182:	4a0c      	ldr	r2, [pc, #48]	; (1b4 <ClocksInit+0x90>)
 184:	2102      	movs	r1, #2
 186:	31ff      	adds	r1, #255	; 0xff
 188:	6091      	str	r1, [r2, #8]
	GCLK->GENCTRL.reg = GCLK_GENCTRL_ID(1) | GCLK_GENCTRL_SRC_XOSC32K | GCLK_GENCTRL_OE | GCLK_GENCTRL_GENEN;
 18a:	490b      	ldr	r1, [pc, #44]	; (1b8 <ClocksInit+0x94>)
 18c:	6051      	str	r1, [r2, #4]
	
	SYSCTRL->OSC8M.bit.PRESC = 0x00;  // divide by 1 
 18e:	6a19      	ldr	r1, [r3, #32]
 190:	480a      	ldr	r0, [pc, #40]	; (1bc <ClocksInit+0x98>)
 192:	4001      	ands	r1, r0
 194:	6219      	str	r1, [r3, #32]
	SYSCTRL->OSC8M.bit.ENABLE = 1;
 196:	6a19      	ldr	r1, [r3, #32]
 198:	2002      	movs	r0, #2
 19a:	4301      	orrs	r1, r0
 19c:	6219      	str	r1, [r3, #32]
	
	//GCLK->GENCTRL.reg = GCLK_GENCTRL_ID(0) | GCLK_GENCTRL_SRC_OSC8M | GCLK_GENCTRL_OE | GCLK_GENCTRL_GENEN;	
	GCLK->GENCTRL.reg = (0xffc0e0f0 & GCLK->GENCTRL.reg) | 0x00090600; // on register level. Check datasheet bro
 19e:	6853      	ldr	r3, [r2, #4]
 1a0:	4907      	ldr	r1, [pc, #28]	; (1c0 <ClocksInit+0x9c>)
 1a2:	4019      	ands	r1, r3
 1a4:	4b07      	ldr	r3, [pc, #28]	; (1c4 <ClocksInit+0xa0>)
 1a6:	430b      	orrs	r3, r1
 1a8:	6053      	str	r3, [r2, #4]
	

 1aa:	bd30      	pop	{r4, r5, pc}
 1ac:	41004400 	.word	0x41004400
 1b0:	40000800 	.word	0x40000800
 1b4:	40000c00 	.word	0x40000c00
 1b8:	00090501 	.word	0x00090501
 1bc:	fffffcff 	.word	0xfffffcff
 1c0:	ffc0e0f0 	.word	0xffc0e0f0
 1c4:	00090600 	.word	0x00090600

000001c8 <Dummy_Handler>:
 1c8:	e7fe      	b.n	1c8 <Dummy_Handler>
	...

000001cc <Reset_Handler>:
 1cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 1ce:	4a2a      	ldr	r2, [pc, #168]	; (278 <Reset_Handler+0xac>)
 1d0:	4b2a      	ldr	r3, [pc, #168]	; (27c <Reset_Handler+0xb0>)
 1d2:	429a      	cmp	r2, r3
 1d4:	d011      	beq.n	1fa <Reset_Handler+0x2e>
 1d6:	001a      	movs	r2, r3
 1d8:	4b29      	ldr	r3, [pc, #164]	; (280 <Reset_Handler+0xb4>)
 1da:	429a      	cmp	r2, r3
 1dc:	d20d      	bcs.n	1fa <Reset_Handler+0x2e>
 1de:	4a29      	ldr	r2, [pc, #164]	; (284 <Reset_Handler+0xb8>)
 1e0:	3303      	adds	r3, #3
 1e2:	1a9b      	subs	r3, r3, r2
 1e4:	089b      	lsrs	r3, r3, #2
 1e6:	3301      	adds	r3, #1
 1e8:	009b      	lsls	r3, r3, #2
 1ea:	2200      	movs	r2, #0
 1ec:	4823      	ldr	r0, [pc, #140]	; (27c <Reset_Handler+0xb0>)
 1ee:	4922      	ldr	r1, [pc, #136]	; (278 <Reset_Handler+0xac>)
 1f0:	588c      	ldr	r4, [r1, r2]
 1f2:	5084      	str	r4, [r0, r2]
 1f4:	3204      	adds	r2, #4
 1f6:	429a      	cmp	r2, r3
 1f8:	d1fa      	bne.n	1f0 <Reset_Handler+0x24>
 1fa:	4a23      	ldr	r2, [pc, #140]	; (288 <Reset_Handler+0xbc>)
 1fc:	4b23      	ldr	r3, [pc, #140]	; (28c <Reset_Handler+0xc0>)
 1fe:	429a      	cmp	r2, r3
 200:	d20a      	bcs.n	218 <Reset_Handler+0x4c>
 202:	43d3      	mvns	r3, r2
 204:	4921      	ldr	r1, [pc, #132]	; (28c <Reset_Handler+0xc0>)
 206:	185b      	adds	r3, r3, r1
 208:	2103      	movs	r1, #3
 20a:	438b      	bics	r3, r1
 20c:	3304      	adds	r3, #4
 20e:	189b      	adds	r3, r3, r2
 210:	2100      	movs	r1, #0
 212:	c202      	stmia	r2!, {r1}
 214:	4293      	cmp	r3, r2
 216:	d1fc      	bne.n	212 <Reset_Handler+0x46>
 218:	4a1d      	ldr	r2, [pc, #116]	; (290 <Reset_Handler+0xc4>)
 21a:	21ff      	movs	r1, #255	; 0xff
 21c:	4b1d      	ldr	r3, [pc, #116]	; (294 <Reset_Handler+0xc8>)
 21e:	438b      	bics	r3, r1
 220:	6093      	str	r3, [r2, #8]
 222:	39fd      	subs	r1, #253	; 0xfd
 224:	2390      	movs	r3, #144	; 0x90
 226:	005b      	lsls	r3, r3, #1
 228:	4a1b      	ldr	r2, [pc, #108]	; (298 <Reset_Handler+0xcc>)
 22a:	50d1      	str	r1, [r2, r3]
 22c:	4a1b      	ldr	r2, [pc, #108]	; (29c <Reset_Handler+0xd0>)
 22e:	78d3      	ldrb	r3, [r2, #3]
 230:	2503      	movs	r5, #3
 232:	43ab      	bics	r3, r5
 234:	2402      	movs	r4, #2
 236:	4323      	orrs	r3, r4
 238:	70d3      	strb	r3, [r2, #3]
 23a:	78d3      	ldrb	r3, [r2, #3]
 23c:	270c      	movs	r7, #12
 23e:	43bb      	bics	r3, r7
 240:	2608      	movs	r6, #8
 242:	4333      	orrs	r3, r6
 244:	70d3      	strb	r3, [r2, #3]
 246:	4b16      	ldr	r3, [pc, #88]	; (2a0 <Reset_Handler+0xd4>)
 248:	7b98      	ldrb	r0, [r3, #14]
 24a:	2230      	movs	r2, #48	; 0x30
 24c:	4390      	bics	r0, r2
 24e:	2220      	movs	r2, #32
 250:	4310      	orrs	r0, r2
 252:	7398      	strb	r0, [r3, #14]
 254:	7b99      	ldrb	r1, [r3, #14]
 256:	43b9      	bics	r1, r7
 258:	4331      	orrs	r1, r6
 25a:	7399      	strb	r1, [r3, #14]
 25c:	7b9a      	ldrb	r2, [r3, #14]
 25e:	43aa      	bics	r2, r5
 260:	4322      	orrs	r2, r4
 262:	739a      	strb	r2, [r3, #14]
 264:	4a0f      	ldr	r2, [pc, #60]	; (2a4 <Reset_Handler+0xd8>)
 266:	6853      	ldr	r3, [r2, #4]
 268:	2180      	movs	r1, #128	; 0x80
 26a:	430b      	orrs	r3, r1
 26c:	6053      	str	r3, [r2, #4]
 26e:	4b0e      	ldr	r3, [pc, #56]	; (2a8 <Reset_Handler+0xdc>)
 270:	4798      	blx	r3
 272:	4b0e      	ldr	r3, [pc, #56]	; (2ac <Reset_Handler+0xe0>)
 274:	4798      	blx	r3
 276:	e7fe      	b.n	276 <Reset_Handler+0xaa>
 278:	0000048c 	.word	0x0000048c
 27c:	20000000 	.word	0x20000000
 280:	2000042c 	.word	0x2000042c
 284:	20000004 	.word	0x20000004
 288:	2000042c 	.word	0x2000042c
 28c:	2000046c 	.word	0x2000046c
 290:	e000ed00 	.word	0xe000ed00
 294:	00000000 	.word	0x00000000
 298:	41007000 	.word	0x41007000
 29c:	41005000 	.word	0x41005000
 2a0:	41004800 	.word	0x41004800
 2a4:	41004000 	.word	0x41004000
 2a8:	000002c5 	.word	0x000002c5
 2ac:	000002b1 	.word	0x000002b1

000002b0 <main>:
// Function Prototypes
//////////////////////////////////////////////////////////////////////////
void ClocksInit(void);	// Configure Clock, Wait States and synch, bus clocks for 48MHz operation

int main(void)
{
 2b0:	b510      	push	{r4, lr}
	// CMSIS compliant function not used
	//SystemInit();
	
	// Application hardware and software initialization 
	AppInit();
 2b2:	4b02      	ldr	r3, [pc, #8]	; (2bc <main+0xc>)
 2b4:	4798      	blx	r3

	// Super loop
	while(1)
	{
		// Run your application
		AppRun();
 2b6:	4c02      	ldr	r4, [pc, #8]	; (2c0 <main+0x10>)
 2b8:	47a0      	blx	r4
 2ba:	e7fd      	b.n	2b8 <main+0x8>
 2bc:	00000115 	.word	0x00000115
 2c0:	00000121 	.word	0x00000121

000002c4 <__libc_init_array>:
 2c4:	b570      	push	{r4, r5, r6, lr}
 2c6:	4e0d      	ldr	r6, [pc, #52]	; (2fc <__libc_init_array+0x38>)
 2c8:	4d0d      	ldr	r5, [pc, #52]	; (300 <__libc_init_array+0x3c>)
 2ca:	2400      	movs	r4, #0
 2cc:	1bad      	subs	r5, r5, r6
 2ce:	10ad      	asrs	r5, r5, #2
 2d0:	d005      	beq.n	2de <__libc_init_array+0x1a>
 2d2:	00a3      	lsls	r3, r4, #2
 2d4:	58f3      	ldr	r3, [r6, r3]
 2d6:	3401      	adds	r4, #1
 2d8:	4798      	blx	r3
 2da:	42a5      	cmp	r5, r4
 2dc:	d1f9      	bne.n	2d2 <__libc_init_array+0xe>
 2de:	f000 f8c3 	bl	468 <_init>
 2e2:	4e08      	ldr	r6, [pc, #32]	; (304 <__libc_init_array+0x40>)
 2e4:	4d08      	ldr	r5, [pc, #32]	; (308 <__libc_init_array+0x44>)
 2e6:	2400      	movs	r4, #0
 2e8:	1bad      	subs	r5, r5, r6
 2ea:	10ad      	asrs	r5, r5, #2
 2ec:	d005      	beq.n	2fa <__libc_init_array+0x36>
 2ee:	00a3      	lsls	r3, r4, #2
 2f0:	58f3      	ldr	r3, [r6, r3]
 2f2:	3401      	adds	r4, #1
 2f4:	4798      	blx	r3
 2f6:	42a5      	cmp	r5, r4
 2f8:	d1f9      	bne.n	2ee <__libc_init_array+0x2a>
 2fa:	bd70      	pop	{r4, r5, r6, pc}
 2fc:	00000474 	.word	0x00000474
 300:	00000474 	.word	0x00000474
 304:	00000474 	.word	0x00000474
 308:	0000047c 	.word	0x0000047c

0000030c <register_fini>:
 30c:	4b03      	ldr	r3, [pc, #12]	; (31c <register_fini+0x10>)
 30e:	b510      	push	{r4, lr}
 310:	2b00      	cmp	r3, #0
 312:	d002      	beq.n	31a <register_fini+0xe>
 314:	4802      	ldr	r0, [pc, #8]	; (320 <register_fini+0x14>)
 316:	f000 f805 	bl	324 <atexit>
 31a:	bd10      	pop	{r4, pc}
 31c:	00000000 	.word	0x00000000
 320:	00000335 	.word	0x00000335

00000324 <atexit>:
 324:	b510      	push	{r4, lr}
 326:	0001      	movs	r1, r0
 328:	2300      	movs	r3, #0
 32a:	2200      	movs	r2, #0
 32c:	2000      	movs	r0, #0
 32e:	f000 f81f 	bl	370 <__register_exitproc>
 332:	bd10      	pop	{r4, pc}

00000334 <__libc_fini_array>:
 334:	b570      	push	{r4, r5, r6, lr}
 336:	4b09      	ldr	r3, [pc, #36]	; (35c <__libc_fini_array+0x28>)
 338:	4c09      	ldr	r4, [pc, #36]	; (360 <__libc_fini_array+0x2c>)
 33a:	1ae4      	subs	r4, r4, r3
 33c:	10a4      	asrs	r4, r4, #2
 33e:	d009      	beq.n	354 <__libc_fini_array+0x20>
 340:	4a08      	ldr	r2, [pc, #32]	; (364 <__libc_fini_array+0x30>)
 342:	18a5      	adds	r5, r4, r2
 344:	00ad      	lsls	r5, r5, #2
 346:	18ed      	adds	r5, r5, r3
 348:	682b      	ldr	r3, [r5, #0]
 34a:	3c01      	subs	r4, #1
 34c:	4798      	blx	r3
 34e:	3d04      	subs	r5, #4
 350:	2c00      	cmp	r4, #0
 352:	d1f9      	bne.n	348 <__libc_fini_array+0x14>
 354:	f000 f892 	bl	47c <_fini>
 358:	bd70      	pop	{r4, r5, r6, pc}
 35a:	46c0      	nop			; (mov r8, r8)
 35c:	00000488 	.word	0x00000488
 360:	0000048c 	.word	0x0000048c
 364:	3fffffff 	.word	0x3fffffff

00000368 <__retarget_lock_acquire_recursive>:
 368:	4770      	bx	lr
 36a:	46c0      	nop			; (mov r8, r8)

0000036c <__retarget_lock_release_recursive>:
 36c:	4770      	bx	lr
 36e:	46c0      	nop			; (mov r8, r8)

00000370 <__register_exitproc>:
 370:	b5f0      	push	{r4, r5, r6, r7, lr}
 372:	464e      	mov	r6, r9
 374:	4645      	mov	r5, r8
 376:	46de      	mov	lr, fp
 378:	4657      	mov	r7, sl
 37a:	b5e0      	push	{r5, r6, r7, lr}
 37c:	4d36      	ldr	r5, [pc, #216]	; (458 <__register_exitproc+0xe8>)
 37e:	b083      	sub	sp, #12
 380:	0006      	movs	r6, r0
 382:	6828      	ldr	r0, [r5, #0]
 384:	4698      	mov	r8, r3
 386:	000f      	movs	r7, r1
 388:	4691      	mov	r9, r2
 38a:	f7ff ffed 	bl	368 <__retarget_lock_acquire_recursive>
 38e:	4b33      	ldr	r3, [pc, #204]	; (45c <__register_exitproc+0xec>)
 390:	681c      	ldr	r4, [r3, #0]
 392:	23a4      	movs	r3, #164	; 0xa4
 394:	005b      	lsls	r3, r3, #1
 396:	58e0      	ldr	r0, [r4, r3]
 398:	2800      	cmp	r0, #0
 39a:	d052      	beq.n	442 <__register_exitproc+0xd2>
 39c:	6843      	ldr	r3, [r0, #4]
 39e:	2b1f      	cmp	r3, #31
 3a0:	dc13      	bgt.n	3ca <__register_exitproc+0x5a>
 3a2:	1c5a      	adds	r2, r3, #1
 3a4:	9201      	str	r2, [sp, #4]
 3a6:	2e00      	cmp	r6, #0
 3a8:	d128      	bne.n	3fc <__register_exitproc+0x8c>
 3aa:	9a01      	ldr	r2, [sp, #4]
 3ac:	3302      	adds	r3, #2
 3ae:	009b      	lsls	r3, r3, #2
 3b0:	6042      	str	r2, [r0, #4]
 3b2:	501f      	str	r7, [r3, r0]
 3b4:	6828      	ldr	r0, [r5, #0]
 3b6:	f7ff ffd9 	bl	36c <__retarget_lock_release_recursive>
 3ba:	2000      	movs	r0, #0
 3bc:	b003      	add	sp, #12
 3be:	bc3c      	pop	{r2, r3, r4, r5}
 3c0:	4690      	mov	r8, r2
 3c2:	4699      	mov	r9, r3
 3c4:	46a2      	mov	sl, r4
 3c6:	46ab      	mov	fp, r5
 3c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 3ca:	4b25      	ldr	r3, [pc, #148]	; (460 <__register_exitproc+0xf0>)
 3cc:	2b00      	cmp	r3, #0
 3ce:	d03d      	beq.n	44c <__register_exitproc+0xdc>
 3d0:	20c8      	movs	r0, #200	; 0xc8
 3d2:	0040      	lsls	r0, r0, #1
 3d4:	e000      	b.n	3d8 <__register_exitproc+0x68>
 3d6:	bf00      	nop
 3d8:	2800      	cmp	r0, #0
 3da:	d037      	beq.n	44c <__register_exitproc+0xdc>
 3dc:	22a4      	movs	r2, #164	; 0xa4
 3de:	2300      	movs	r3, #0
 3e0:	0052      	lsls	r2, r2, #1
 3e2:	58a1      	ldr	r1, [r4, r2]
 3e4:	6043      	str	r3, [r0, #4]
 3e6:	6001      	str	r1, [r0, #0]
 3e8:	50a0      	str	r0, [r4, r2]
 3ea:	3240      	adds	r2, #64	; 0x40
 3ec:	5083      	str	r3, [r0, r2]
 3ee:	3204      	adds	r2, #4
 3f0:	5083      	str	r3, [r0, r2]
 3f2:	3301      	adds	r3, #1
 3f4:	9301      	str	r3, [sp, #4]
 3f6:	2300      	movs	r3, #0
 3f8:	2e00      	cmp	r6, #0
 3fa:	d0d6      	beq.n	3aa <__register_exitproc+0x3a>
 3fc:	009a      	lsls	r2, r3, #2
 3fe:	4692      	mov	sl, r2
 400:	4482      	add	sl, r0
 402:	464a      	mov	r2, r9
 404:	2188      	movs	r1, #136	; 0x88
 406:	4654      	mov	r4, sl
 408:	5062      	str	r2, [r4, r1]
 40a:	22c4      	movs	r2, #196	; 0xc4
 40c:	0052      	lsls	r2, r2, #1
 40e:	4691      	mov	r9, r2
 410:	4481      	add	r9, r0
 412:	464a      	mov	r2, r9
 414:	3987      	subs	r1, #135	; 0x87
 416:	4099      	lsls	r1, r3
 418:	6812      	ldr	r2, [r2, #0]
 41a:	468b      	mov	fp, r1
 41c:	430a      	orrs	r2, r1
 41e:	4694      	mov	ip, r2
 420:	464a      	mov	r2, r9
 422:	4661      	mov	r1, ip
 424:	6011      	str	r1, [r2, #0]
 426:	2284      	movs	r2, #132	; 0x84
 428:	4641      	mov	r1, r8
 42a:	0052      	lsls	r2, r2, #1
 42c:	50a1      	str	r1, [r4, r2]
 42e:	2e02      	cmp	r6, #2
 430:	d1bb      	bne.n	3aa <__register_exitproc+0x3a>
 432:	0002      	movs	r2, r0
 434:	465c      	mov	r4, fp
 436:	328d      	adds	r2, #141	; 0x8d
 438:	32ff      	adds	r2, #255	; 0xff
 43a:	6811      	ldr	r1, [r2, #0]
 43c:	430c      	orrs	r4, r1
 43e:	6014      	str	r4, [r2, #0]
 440:	e7b3      	b.n	3aa <__register_exitproc+0x3a>
 442:	0020      	movs	r0, r4
 444:	304d      	adds	r0, #77	; 0x4d
 446:	30ff      	adds	r0, #255	; 0xff
 448:	50e0      	str	r0, [r4, r3]
 44a:	e7a7      	b.n	39c <__register_exitproc+0x2c>
 44c:	6828      	ldr	r0, [r5, #0]
 44e:	f7ff ff8d 	bl	36c <__retarget_lock_release_recursive>
 452:	2001      	movs	r0, #1
 454:	4240      	negs	r0, r0
 456:	e7b1      	b.n	3bc <__register_exitproc+0x4c>
 458:	20000428 	.word	0x20000428
 45c:	00000464 	.word	0x00000464
 460:	00000000 	.word	0x00000000

00000464 <_global_impure_ptr>:
 464:	20000000                                ... 

00000468 <_init>:
 468:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 46a:	46c0      	nop			; (mov r8, r8)
 46c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 46e:	bc08      	pop	{r3}
 470:	469e      	mov	lr, r3
 472:	4770      	bx	lr

00000474 <__init_array_start>:
 474:	0000030d 	.word	0x0000030d

00000478 <__frame_dummy_init_array_entry>:
 478:	000000dd                                ....

0000047c <_fini>:
 47c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 47e:	46c0      	nop			; (mov r8, r8)
 480:	bcf8      	pop	{r3, r4, r5, r6, r7}
 482:	bc08      	pop	{r3}
 484:	469e      	mov	lr, r3
 486:	4770      	bx	lr

00000488 <__fini_array_start>:
 488:	000000b5 	.word	0x000000b5
